openapi: 3.0.3
info:
  title: DeepReel API Documentation (latest)
  version: 1.0.0
  description: |2

    This page contains the documentation on how to use DEEPREEL AI Platform through API calls.
    > Note: For any endpoints blah blah blah...

    # Introduction
    This API is documented in **OpenAPI format**.

    # Request Content-Type
    The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.

    # Authentication
    > All of the endpoints require APIKey authentication.

    ### ApiKeyAuth Scheme

    | Item                   | Value     |
    | ---------------------- | --------- |
    | Security Scheme Type:  | API Key   |
    | Header parameter name: | X-API-KEY |
    | Header parameter desc: | API key with the prefix: `dr_` <br> e.g. `dr_ApnKD16Sw64AQ6-arfK0PTCPcXsTuIqEHZENX0Q2MSogCZu` |

    <SecurityDefinitions />

    To become authenticated you will need to have an API Key (please reach out to sales@deepreel.com to request an ApiKey).
    Once you have your API Key you can pass it in along in an HTTP header like this:
    ```
    curl --request GET 'http://127.0.0.1:8001/project/assets/avatar/?campaign=true'
    --header 'x-api-key: dr_ApnKD16Sw64AQ6-arfK0PTCPcXsTuIqEHZENX0Q2MSogCZu'
    ```
    and this is how POST requests will look:
    ```
    curl --request POST 'http://127.0.0.1:8001/project/generate_video/'
    --header 'x-api-key: dr_ApnKD16Sw64AQ6-arfK0PTCPcXsTuIqEHZENX0Q2MSogCZu'
    --header 'Content-Type: application/json'
    --data-raw
        '{
            'slate_script': [
                {
                    'type': 'paragraph',
                    'children': [
                        {
                            'speedValue': 1,
                            'volumeValue': 'medium',
                            'pitchValue': 'medium',
                            'text': 'Hello DeepReel!'
                        }
                    ]
                }
            ],
            'avatar_id': '<id>',
            'project_id': '<id>',
            'language_id': '<id>',
            'background_color': '#2E353E',
            'aspect_ratio': '16:9'
        }'
    ```

    # Boolean values
    If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise.
  x-logo:
    url: /icons/deepreel-logo-main.png
paths:
  /project/assets/avatar/:
    get:
      operationId: Get Avatars
      description:
        List of available avatars either public or associated with the
        authenticated user.
      parameters:
        - in: query
          name: gender
          schema:
            type: integer
          description: Filter by gender. 1 for Male, 2 for Female and 3 for Non Binary
          examples:
            Example-gender-male:
              value: "1"
              summary: example-gender-male
        - in: query
          name: language
          schema:
            type: integer
          description: Filter by the id of the language
      tags:
        - project
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Avatar"
          description: ""
  /project/assets/background/:
    get:
      operationId: Get Backgrounds
      description:
        List of available backgrounds either public or associated with
        the authenticated user.
      tags:
        - project
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Background"
          description: ""
  /project/assets/language/:
    get:
      operationId: Get Languages
      description: List of available languages
      parameters:
        - in: query
          name: avatar_id
          schema:
            type: string
            format: uuid
          description: Languagues associated with the avatar
          examples:
            Example-avatarId:
              value: 1ba08abc-b551-4893-b816-f072eb6565c4
              summary: Example avatar id
      tags:
        - project
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Language"
          description: ""
  /project/assets/video/:
    get:
      operationId: Get Videos
      description: List of generated videos
      tags:
        - project
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Video"
          description: ""
  /project/assets/video/{id}/:
    get:
      operationId: Get Video
      description: The retrieve action returns a single object selected by `id`.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this video.
          required: true
      tags:
        - project
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Video"
          description: ""
    put:
      operationId: Update Video
      description: The update action updates a single object selected by `id`.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this video.
          required: true
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                is_public:
                  type: boolean
              required:
                - title
      security:
        - apiKeyAuth: []
      responses:
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: ""
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Video"
          description: ""
    delete:
      operationId: Delete Video
      description: The delete action deletes a single object selected by `id`.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: A UUID string identifying this video.
          required: true
      tags:
        - project
      security:
        - apiKeyAuth: []
      responses:
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: ""
        "204":
          description: No response body
  /project/generate_video/:
    post:
      operationId: Generate Video
      description: Create a customized video.
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                slate_script:
                  type: string
                avatar_id:
                  type: string
                  format: uuid
                project_id:
                  type: string
                  format: uuid
                  description:
                    The project_id of the project, you can query                                             GET
                    https://api.deepreel.com/projects to list all available projects.
                language_id:
                  type: string
                  format: uuid
                aspect_ratio:
                  type: string
                  enum:
                    - "16:9"
                    - "4:3"
                    - "1:1"
                background_image:
                  type: string
                  format: uri
                stability:
                  type: number
                  minimum: 0
                  maximum: 1
                style_exaggeration:
                  type: number
                  minimum: 0
                  maximum: 1
                background_color:
                  type: string
                  description: "RGB hex value e.g. #ff332d"
                  pattern: "#[0-9A-Fa-f]{6}"
              required:
                - slate_script
                - avatar_id
                - project_id
                - language_id
                - aspect_ratio
      security:
        - apiKeyAuth: []
      responses:
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: ""
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  project_id:
                    type: array
                    items:
                      type: string
          description: ""
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  video_id:
                    type: string
                    format: uuid
                  time_estimated:
                    type: string
                    nullable: true
                    format: date-time
                  message:
                    type: string
          description: ""
  /project/generate_voice_audio/:
    post:
      operationId: Create Audio
      description: Generate Audio from voice.
      tags:
        - project
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                slate_script:
                  type: string
                voice_id:
                  type: string
                  format: uuid
                language_id:
                  type: string
                  format: uuid
                stability:
                  type: number
                  minimum: 0
                  maximum: 1
                  default: 0.5
                style_exaggeration:
                  type: number
                  minimum: 0
                  maximum: 1
                  default: 0.0
              required:
                - slate_script
                - voice_id
                - language_id
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  download_url:
                    type: string
          description: ""
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: ""
  /project/saved_voices_audio/:
    get:
      operationId: List Generated Audios
      description: List of generate voice audios.
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      tags:
        - project
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedUserVoiceAudiosList"
          description: ""
  /project/user_voice_audio_saved_settings/{voice_id}/:
    get:
      operationId: Get Voice Properties
      description: Get the saved settings of the voice.
      parameters:
        - in: path
          name: voice_id
          schema:
            type: string
            format: uuid
          required: true
      tags:
        - project
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserVoiceAudioSavedSetting"
          description: ""
        "404":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: ""
  /project/voice/:
    get:
      operationId: Get User Voices
      description: Get the list of user's saved voices.
      parameters:
        - in: query
          name: gender
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      tags:
        - project
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedVoiceList"
          description: ""
  /subscription/active/:
    get:
      operationId: Active Subscription Info
      tags:
        - subscription
      security:
        - apiKeyAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  plan:
                    type: object
                    properties:
                      name:
                        type: string
                      usage_based_allowed:
                        type: boolean
                  currently_status:
                    type: string
                  plan_expires_at:
                    type: string
                    format: date-time
                  total_credits:
                    type: number
                    minimum: 0
                  credits_left:
                    type: number
                    minimum: 0
                  credits_used:
                    type: number
                    minimum: 0
                  extra_credits_charges:
                    type: number
                  total_custom_avatar_credits:
                    type: number
                    minimum: 0
                  custom_avatar_credits_left:
                    type: number
                    minimum: 0
                  cancel_on_month_end:
                    type: boolean
                  scheduled_subscription:
                    type: object
                    nullable: true
                    properties:
                      plan:
                        type: string
                      mode:
                        type: string
                        enum:
                          - month
                          - year
                      start_date:
                        type: string
                        format: date-time
          description: ""
components:
  schemas:
    AgeGroupEnum:
      enum:
        - Young
        - Adult
        - Old
      type: string
      description: |-
        * `Young` - Young
        * `Adult` - Adult
        * `Old` - Old
    Avatar:
      type: object
      description: Serializer for avatar model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 100
        cropped_asset:
          type: string
          format: uri
          nullable: true
        cropped_asset_landscape:
          type: string
          format: uri
          nullable: true
        cropped_asset_portrait:
          type: string
          format: uri
          nullable: true
        full_asset:
          type: string
          format: uri
          nullable: true
        full_asset_logo:
          type: string
          format: uri
          nullable: true
        words_per_minute:
          type: string
          readOnly: true
        is_pending:
          type: boolean
        estimation_completion_time:
          type: string
          format: date-time
          nullable: true
        is_custom:
          type: boolean
        orientation:
          $ref: "#/components/schemas/OrientationEnum"
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_colorcode_bg_supported:
          type: boolean
          nullable: true
      required:
        - created_at
        - id
        - words_per_minute
    Background:
      type: object
      description: Serializer for Background model
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        file:
          type: string
          format: uri
        low_resolution_file:
          type: string
          format: uri
          nullable: true
        is_public:
          type: boolean
        name:
          type: string
          nullable: true
          maxLength: 50
        file_name:
          type: string
          readOnly: true
        low_resolution_file_name:
          type: string
          readOnly: true
      required:
        - created_at
        - file
        - file_name
        - id
        - low_resolution_file_name
        - updated_at
    BlankEnum:
      enum:
        - ""
    GenderEnum:
      enum:
        - Male
        - Female
      type: string
      description: |-
        * `Male` - Male
        * `Female` - Female
    Language:
      type: object
      description: Serializer for language model
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        is_ssml_supported:
          type: string
          readOnly: true
        is_multilingual:
          type: boolean
        is_eleven_lab:
          type: string
          readOnly: true
        translate_code:
          type: string
          nullable: true
          maxLength: 10
        is_default:
          type: string
          readOnly: true
      required:
        - id
        - is_default
        - is_eleven_lab
        - is_ssml_supported
        - name
    LanguageCustom:
      type: object
      description: Allows to specify fields to be included
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
        - id
        - name
    NullEnum:
      enum:
        - null
    OrientationEnum:
      enum:
        - horizontal
        - vertical
      type: string
      description: |-
        * `horizontal` - horizontal
        * `vertical` - vertical
    PaginatedUserVoiceAudiosList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/UserVoiceAudios"
    PaginatedVoiceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/Voice"
    StatusEnum:
      enum:
        - pending
        - complete
      type: string
      description: |-
        * `pending` - pending
        * `complete` - complete
    UserVoiceAudioSavedSetting:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        stability:
          type: number
          format: double
        similarity_boost:
          type: number
          format: double
        style_exaggeration:
          type: number
          format: double
        voice:
          type: string
          format: uuid
          nullable: true
      required:
        - id
    UserVoiceAudios:
      type: object
      description: Allows to specify fields to be included
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        tts_audio:
          type: string
          format: uri
          nullable: true
        script:
          type: string
        voicelanguage:
          $ref: "#/components/schemas/VoiceLanguages"
      required:
        - id
        - voicelanguage
    Video:
      type: object
      description: Serializer for Video model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        video:
          type: string
          format: uri
          nullable: true
        background_color:
          type: string
          nullable: true
          maxLength: 7
        title:
          type: string
          nullable: true
          maxLength: 100
        status:
          $ref: "#/components/schemas/StatusEnum"
        video_status:
          $ref: "#/components/schemas/VideoStatusEnum"
        avatar:
          $ref: "#/components/schemas/Avatar"
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_public:
          type: boolean
        estimation_completion_time:
          type: string
          format: date-time
          nullable: true
        video_creator:
          type: string
          readOnly: true
        video_creator_id:
          type: string
          readOnly: true
        aspect_ratio:
          type: string
          nullable: true
          maxLength: 15
      required:
        - avatar
        - created_at
        - id
        - video_creator
        - video_creator_id
    VideoStatusEnum:
      enum:
        - Pending
        - Complete
        - Queued
        - Processing
        - Failed
      type: string
      description: |-
        * `Pending` - Pending
        * `Complete` - Complete
        * `Queued` - Queued
        * `Processing` - Processing
        * `Failed` - Failed
    Voice:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 255
        gender:
          nullable: true
          oneOf:
            - $ref: "#/components/schemas/GenderEnum"
            - $ref: "#/components/schemas/BlankEnum"
            - $ref: "#/components/schemas/NullEnum"
        age_group:
          nullable: true
          oneOf:
            - $ref: "#/components/schemas/AgeGroupEnum"
            - $ref: "#/components/schemas/BlankEnum"
            - $ref: "#/components/schemas/NullEnum"
        voice_accent:
          $ref: "#/components/schemas/VoiceAccent"
        accent_strength:
          type: number
          format: double
        stability:
          type: number
          format: double
        similarity_boost:
          type: number
          format: double
        style_exaggeration:
          type: number
          format: double
        is_favourite:
          type: boolean
          readOnly: true
        sample_audio:
          type: string
          format: uri
          nullable: true
      required:
        - id
        - is_favourite
        - voice_accent
    VoiceAccent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 255
      required:
        - id
    VoiceCustom:
      type: object
      description: Serializer for language model
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 255
        gender:
          nullable: true
          oneOf:
            - $ref: "#/components/schemas/GenderEnum"
            - $ref: "#/components/schemas/BlankEnum"
            - $ref: "#/components/schemas/NullEnum"
        age_group:
          nullable: true
          oneOf:
            - $ref: "#/components/schemas/AgeGroupEnum"
            - $ref: "#/components/schemas/BlankEnum"
            - $ref: "#/components/schemas/NullEnum"
        voice_accent:
          $ref: "#/components/schemas/VoiceAccent"
        accent_strength:
          type: number
          format: double
      required:
        - id
        - voice_accent
    VoiceLanguages:
      type: object
      description: Serializer for language model
      properties:
        id:
          type: integer
          readOnly: true
        voice:
          $ref: "#/components/schemas/VoiceCustom"
        language:
          $ref: "#/components/schemas/LanguageCustom"
      required:
        - id
        - language
        - voice
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
      description:
        "Your API key with the prefix: `dr_`. This is required by all endpoints
        to access our API programatically. You can view your x-api-key using the 'Profile'
        tab on the website."
